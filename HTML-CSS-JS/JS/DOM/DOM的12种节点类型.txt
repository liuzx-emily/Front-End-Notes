	DOM
DOM:document object model 文档对象模型
DOM是javascript操作网页的接口，它的作用是将网页转为一个javascript对象，
从而可以使用javascript对网页进行各种操作。
浏览器会根据DOM模型，将HTML文档解析成一系列的节点，再由这些节点组成一个树状结构。
DOM的最小组成单位叫做节点(node)，节点有12种。

	

一般地，节点至少拥有nodeType、nodeName和nodeValue这三个基本属性。
节点类型不同，这三个属性的值也不相同

nodeType属性返回节点类型的常数值。
	元素节点            Node.ELEMENT_NODE(1)
	属性节点            Node.ATTRIBUTE_NODE(2)
	文本节点            Node.TEXT_NODE(3)
	CDATA节点           Node.CDATA_SECTION_NODE(4)
	实体引用名称节点	Node.ENTRY_REFERENCE_NODE(5)
	实体引用名称  		Node.ENTITY_NODE(6)
	处理指令节点        Node.PROCESSING_INSTRUCTION_NODE(7)
	注释节点            Node.COMMENT_NODE(8)
	文档节点            Node.DOCUMENT_NODE(9)
	文档类型节点        Node.DOCUMENT_TYPE_NODE(10)
	文档片段节点        Node.DOCUMENT_FRAGMENT_NODE(11)
	DTD声明节点         Node.NOTATION_NODE(12)

	DOM定义了一个Node接口，这个接口在javascript中是作为Node类型实现的，而在IE8-浏览器中的所有DOM对象都是以COM对象的形式实现的。所以，IE8-浏览器并不支持Node对象的写法

	//在标准浏览器下返回1，而在IE8-浏览器中报错，提示Node未定义
	console.log(Node.ELEMENT_NODE);

nodeName属性返回节点的名称

nodeValue属性返回或设置当前节点的值，格式为字符串


————————————————————————
1	元素节点element
	对应标签元素
　　nodeType值是1	console.log(Node.ELEMENT_NODE === 1);//true
	nodeName值是大写的标签名
	nodeValue值是null

以body元素为例：
	console.log(document.body.nodeType,document.body.nodeName,document.body.nodeValue);
	//1 "BODY" null 


————————————————————————
2	属性节点attribute
	对应HTML标签的属性
	它只存在于元素的attributes属性中，并不是DOM文档树的一部分。
	nodeType值是2	console.log(Node.ATTRIBUTE_NODE === 2);//rue
	nodeName值是属性名
	nodeValue值是属性值

	<div id="test"></div>
	<script>
		var node2=test.attributes.id;	
		console.log(node2.nodeType,node2.nodeName,node2.nodeValue);
		//2 'id' 'test'   
	</script>
 

————————————————————————
3	文本节点
　　nodeType值是3	console.log(Node.TEXT_NODE === 3);//true    
	nodeName值是'#text'
	nodeValue值是标签内容值

	<div id="test">测试</div>
	<script>
		var node3 = test.firstChild;
		console.log(node3.nodeType,node3.nodeName,node3.nodeValue)
		//3 '#text' '测试'
	</script>
 

————————————————————————
4~7一般用不到：
	4	CDATA节点
	　　CDATASection类型只针对基于XML的文档，只出现在XML文档中，表示的是CDATA区域
	　　nodeType的值为4
		nodeName的值为'#cdata-section'
		nodevalue的值是CDATA区域中的内容

	5	实体引用名称节点entry_reference
	　　实体是一个声明，指定了在XML中取代内容或标记而使用的名称。
		实体包含两个部分，首先，必须使用实体声明将名称绑定到替换内容。 实体声明是使用 <!ENTITY name "value"> 语法在文档类型定义(DTD)或XML架构中创建的。其次，在实体声明中定义的名称随后将在 XML 中使用。 
			//实体名称
			<!ENTITY publisher "Microsoft Press">
			//实体名称引用
			<pubinfo>Published by &publisher;</pubinfo>
		在XML中使用时，该名称称为实体引用。
		nodeType的值为5
		nodeName的值为实体引用的名称
		nodeValue的值为null

	6	实体名称节点
	　　上面已经详细解释过，就不再赘述
	　　nodeType的值为6
		nodeName的值为实体名称
		nodeValue的值为null 

	7	处理指令节点ProcessingInstruction
		nodeType的值为7
		nodeName的值为target
		nodeValue的值为entire content excluding the target


————————————————————————
8	注释节点comment
	表示网页中的HTML注释
	nodeType的值为8		console.log(Node.COMMENT_NODE === 8);//true  
	nodeName的值为'#comment'
	nodeValue的值为注释的内容

	<div id="myDiv"><!-- lalala我是注释内容 --></div>
	<script>
		var node8 = myDiv.firstChild;
		console.log(node8.nodeType,node8.nodeName,node8.nodeValue)	
		//8 '#comment' 'lalala我是注释内容'  
	</script>

 
————————————————————————
9	文档节点document
	表示HTML文档，也称为根节点，指向document对象。
	nodeType的值为9		console.log(Node.DOCUMENT_NODE === 9);//true
	nodeName的值为'#document'
	nodeValue的值为null

	<script>		
		console.log(document.nodeType,document.nodeName,document.nodeValue)
		//9 "#document" null    
	</script>
 

————————————————————————
10	文档类型节点DocumentType
	包含着与文档的doctype有关的所有信息。
	nodeType的值为10	console.log(Node.DOCUMENT_TYPE_NODE === 10);//true
	nodeName的值为doctype的名称
	nodeValue的值为null

	<!DOCTYPE html>
	<html lang="en">
	<head>
		<meta charset="UTF-8">
		<title>Document</title>
	</head>
	<body>
		<script>
			var node10 = document.firstChild;
			console.log(node10.nodeType,node10.nodeName,node10.nodeValue);
			//10 "html" null		
		</script>
	</body>
	</html>
 

————————————————————————
11~12好像也不常用？？
	11	文档片段节点DocumentFragment
	　　在文档中没有对应的标记，是一种轻量级的文档，可以包含和控制节点，但不会像完整的文档那样占用额外的资源。
		nodeType的值为11	console.log(Node.DOCUMENT_FRAGMENT_NODE === 11);//true
		nodeName的值为'#document-fragment'
		nodeValue的值为null

		<script>
			var node11 = document.createDocumentFragment(); 
			console.log(node11.nodeType,node11.nodeName,node11.nodeValue);   
			//11 "#document-fragment" null			
		</script>

	12	DTD声明节点notation
		代表DTD中声明的符号
		nodeType的值为12
		nodeName的值为符号名称
		nodeValue的值为null






