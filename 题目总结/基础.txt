
---------------------JS基础知识---------------------

1*	alert(1&&2);
	alert(1||2);

2*	a b两个变量，不用第三个变量来切换两个变量值

3*	找出数组中的最大值 arr=[1,2,3]

4*	将多维数组转化成1维：[1,2,[[5,9],6],[1,4,8]]

5*	var arr1=[1,2,3];
	var arr2=[4,5,6];
	arr1+arr2结果是什么？

6*	a=3,则b=5
	a=5,则b=12
	a=其他，则b=7;（不能用if和switch）


----【答案】----

1	2  1

2	方法一：ES6
		[a,b]=[b,a]
	方法二：不用ES6
		a=[a,b];
		b=a[0];
		a=a[1];

3	Math.max.apply(null,arr)

4	var arr1=[1,2,[[5,9],6],[1,4,8]];
	arr2=arr1.join(",").split(",");
	// arr2: ["1", "2", "5", "9", "6", "1", "4", "8"]
	arr2.map(function(x){
		return parseInt(x);
	});
	// arr2: [1, 2, 5, 9, 6, 1, 4, 8]

5	arr1+arr2 	//"1,2,34,5,6" 是个string
	说明：
		arr1转成字符串："1,2,3"
		arr2转成字符串："4,5,6"
		字符串相加，变成"1,2,34,5,6"
	[1,2,3]+'aa'的结果是:"1,2,3aa"

6	方法一：
		var b = (a==3 && 5) || (a==5 && 12) || 7;
	方法二：
		var b={'3':5,'5':12}[a] || 7;	








---------------------jQ基础---------------------
1 	获得ul>li*4中所有li的内容

2

----【答案】----

1	方法一：text()和别的函数不同。它的结果不是第一个匹配元素的内容，而是所有匹配元素的内容
		$("ul>li").text();
	方法二：html text val attr prop都可以用function(){}
		var str="";
		$("ul>li").html(function(index,val){
			str+=val;
			return val;
		});





---------------------get和post的区别---------------------

----【答案】----

长度限制：
	http协议对get和post的长度都没有任何限制。		
	get：放在url中。http协议不限制url的长度，但浏览器、服务器可能会限制url的长度，从而限制get的长度。
	post：服务器、内存大小可能会限制post的长度

安全性：
	get请求放在url中，post请求放在header中。两者都是明文传输，都可以抓包，都不安全。
	get请求会保存在浏览器历史纪录中，也可能保存在Web的日志中。而post的请求发完基本就没了，不会被保存，所以post相对要安全一点点。

http设计初衷：
	get：不修改数据
	post：修改数据

用处：
	get：
		请求中的URL可以被手动输入
		请求中的URL可以被存在书签里，或者历史里，或者分享给别人。
		请求中的URL是可以被搜索引擎收录的。
		带云压缩的浏览器，比如Opera mini/Turbo 2, 只有GET才能在服务器端被预取的。
		请求中的URL可以被缓存，大大减轻服务器负担
		可以重复的交互，比如取个数据，跳个页面， 用GET.
	post：
		不想被人为在浏览器地址栏里面输入的。比如，日志系统中有一个删除所有日志的请求，那么绝对不能用get
		不可以重复的操作，比如新增、修改。因为POST不能被缓存，所以浏览器不会多次提交。






---------------------正则---------------------

1	转驼峰：background-color转成backgroundColor

2*	查找字符串中出现最多的字符和个数

3*	给字符串加千分符

4	返回一个只包含数字类型的数组
	js123ldka78sdasdasdfad653 -> [123,78,653]


----【答案】----

1	var str='background-color-ha';
	var re=/-([a-z])/g;
	var str2=str.replace(re,function(match,p1){
		return p1.toUpperCase();
	});
	alert(str2);	//backgroundColorHa
	或者：
	str.replace(/-[a-z]/g,function(match){
		return match[1].toUpperCase();
	});

2	var str="abkdisaovifwodjn18djaa";
	var str2=str.split("").sort().join("");
	var resMap={};
	var maxMap={el:"",count:0};
	str2.replace(/([\d\D])\1*/g,function(match){
		var el=match[0];
		var len=match.length;
		resMap[el]=len;
		if(len>maxMap.count){
			maxMap.count=len;
			maxMap.el=el;
		}
		return match;
	});
	console.log(resMap);
	console.log(maxMap);
	关键点：
	1 思路：要想到先排序，把一样的字符排一起
	2 str不能sort，转成arr才能sort
	
	或者不用正则：
		var str="abkdisaovifwodjn18djaa";
		var resMap={};
		var maxMap={
			el:"",
			count:0
		};
		for(var i=0;i<str.length;i++){
			var el=str[i];
			if(resMap[el]==undefined){
				resMap[el]=0;
			}
			resMap[el]++;
			var len=resMap[el];
			if(len>maxMap.count){
				maxMap.count=len;
				maxMap.el=el;
			}
		}
		console.log(JSON.stringify(resMap));
		console.log(maxMap);

3	var str = "135452154724";
  	var re = /(?=(\d{3})+$)/g;
  	str.replace(re, ",");
  	但是：
  	"1354552154724" -> "1,354,552,154,724"
  	135452154724" -> ",135,452,154,724" （正好3位时，前面有逗号）
  	改：加上(?!\b)
	var re = /(?=((?!\b)\d{3})+$)/g;
	以后再看：http: //blog.csdn.net/sunhuaer123/article/details/16343313

4 	var str = "js123ldka78sdasdasdfad653";
	var re = /[\d]+/g;
	var arr=str.match(re);	//[ '123', '78', '653' ]




