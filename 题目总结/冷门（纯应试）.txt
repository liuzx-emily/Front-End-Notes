---------------------JS冷门知识---------------------

1 	(function(){
	  return typeof arguments;
	})();

2	var y = 1, x = y = typeof x;
  	x;

3  	(function f(f){
		return typeof f();
	})(function(){ return 1; });

4*	var foo = {
		bar: function() { return this.baz; },
		baz: 1
	};
	(function(){
		return typeof arguments[0]();
	})(foo.bar);

5*	var foo = {
		bar: function(){ return this.baz; },
		baz: 1
	}
	typeof (f = foo.bar)();

6*	var f = function g(){ return 23; };
  	typeof g();

7*	var f = (function f(){ return "1"; }, function g(){ return 2; })();
  	typeof f;

8*	(function(foo){
		return typeof foo.bar;
	})({ foo: { bar: 1 } });


----【答案】----

1 	"object"
	typeof返回的是一个字符串。
	数组的类型不是"array"，是"object"

2 	"undefined"

3 	"number"

4 	"undefined"
	函数中的this指谁，不看在哪定义的。要看在哪调用的。本题中把foo.bar作为一个独立个体传参，this指的是window

5	"undefined"
	同上

6	报错：g is not defined
	如果把一个有名字g的函数赋给一个变量f，那么名字g是未定义

7	"number"
	分组选择符：选最后一个
	var a=('ha,2,3.5);	//a是3.5

8	"undefined"


