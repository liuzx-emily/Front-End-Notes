官方文档（英）：http://sass-lang.com/docs/yardoc/file.SASS_REFERENCE.html
指南：http://www.ruanyifeng.com/blog/2012/06/sass.html

-----------
	*基本用法
1 变量
	以$开头
	如果变量需要镶嵌在字符串之中，就必须需要写在#{}之中。
	例：
		$color-base:hotpink;
		$side:left;
		p{
			border-#{$side}:5px solid $color-base;
		}
2 算式
	例：
		body {
	　　　　margin: (14px/2);
	　　　　top: 50px + 100px;
	　　　　right: $var * 10%;
	　　}
3 嵌套
	3.1 选择器嵌套
		div{
			p{}
		}
	3.2 属性嵌套
		{
			border:{
				color:red;
			}
		}
		注意：border后面必须有冒号
		在嵌套的代码块内，可以使用&引用父元素。
		比如a:hover伪类，可以写成：
		　　a {
		　　　　&:hover { color: #ffb3ff; }
		　　}
4 注释
	SASS共有两种注释风格。
	标准的CSS注释 /* comment */ ，会保留到编译后的文件。
	单行注释 // comment，只保留在SASS源文件中，编译后被省略。
	在/*后面加一个感叹号，表示这是"重要注释"。即使是压缩模式编译，也会保留这行注释，通常可以用于声明版权信息。
	　　/*! 
	　　　　重要注释！
	　　*/

-----------
	*代码重用
1 继承
	.class2 {
　　　　@extend .class1;
　　　　font-size:120%;
　　}
2 mixin 有点像宏（macro），是可以重用的代码块
	使用@mixin命令，定义一个代码块。
	　　@mixin left {
	　　　　float: left;
	　　　　margin-left: 10px;
	　　}
	使用@include命令，调用这个mixin。
	　　div {
	　　　　@include left;
	　　}
	mixin的强大之处，在于可以指定参数和缺省值。
	　　@mixin left($value: 10px) {
	　　　　float: left;
	　　　　margin-right: $value;
	　　}
	使用的时候，根据需要加入参数：
	　　div {
	　　　　@include left(20px);
	　　}
3 颜色函数
	lighten(#cc3, 10%) // #d6d65c
　　darken(#cc3, 10%) // #a3a329
　　grayscale(#cc3) // #808080
　　complement(#cc3) // #33c

-----------
	*高级用法
1 if...else
	p {
　　　　@if 1 + 1 == 2 { border: 1px solid; }
　　　　@if 5 < 3 { border: 2px dotted; }
　　}

	@if lightness($color) > 30% {
　　　　background-color: #000;
　　} @else {
　　　　background-color: #fff;
　　}
2 循环：for while each
	@for $i from 1 to 10 {
　　　　.border-#{$i} {
　　　　　　border: #{$i}px solid blue;
　　　　}
　　}

	$i: 6;
　　@while $i > 0 {
　　　　.item-#{$i} { width: 2em * $i; }
　　　　$i: $i - 2;
　　}

　　@each $member in a, b, c, d {
　　　　.#{$member} {
　　　　　　background-image: url("/image/#{$member}.jpg");
　　　　}
　　}
3 自定义函数
	@function double($n) {
　　　　@return $n * 2;
　　}
　　#sidebar {
　　　　width: double(5px);
　　}