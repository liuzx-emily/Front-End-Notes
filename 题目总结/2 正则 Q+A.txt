题：
1 转驼峰：background-color转成backgroundColor
2 查找字符串中出现最多的字符和个数
3 给字符串加千分符【难】
4 返回一个只包含数字类型的数组
	js123ldka78sdasdasdfad653 -> [123,78,653]

--------------
解答1：转驼峰

1 用正则
	var str='background-color-ha';
	var re=/-([a-z])/g;
	var str2=str.replace(re,function(match,p1){
		return p1.toUpperCase();
	});
	alert(str2);	//backgroundColorHa
  关键点：子项 replace替换时用函数

2 不用正则
	var str = 'background-color-ha';
	var arr = str.split('-');
	for (var i = 0; i < arr.length; i++) {
	    arr[i] = arr[i][0].toUpperCase() + arr[i].substring(1);
	}
	var str2 = arr.join("");
	alert(str2);
  关键点：for循环中【易错！】：
  	1 不能用arr[i][0].toUpperCase()
  	2 不能用arr[i][0] = arr[i][0].toUpperCase()
  	因为字符串的值是不能修改的

--------------
解答2：查找字符串中出现最多的字符和个数

1 用正则
	var str = 'abkdisaovifwodjn18djaa';
	var str2 = str.split('').sort().join(''); //"18aaaabdddfiijjknoosvw"
	var re = /([\d\D])\1*/g;
	var c = '';
	var num = 0;
	str2.replace(re, function(match) {
	    if (match.length > num) {
	        num = match.length;
	        c = match[0];
	    }
	});
	alert(c + ',' + num);
	关键点：
	1 思路：要想到先排序，把一样的字符排一起
	2 str不能sort，转成arr才能sort

2 不用正则
	var str = 'abkdisaovifwodjn18djaa';
	var json={};
	for (var i = 0; i < str.length; i++) {
		var c=str[i];
		if(json[c]){
			json[c]++;
		}else{
			json[c]=1;
		}
	}
	c="";
	var num=0;
	for (var char in json) {
		if(json[char]>num){
			num=json[char];
			c=char;
		}
	}
	alert(c + ',' + num);
	关键点：
	1 思路：要想到用一个json存

--------------
解答3：加千分符

1 用正则（自己想的，没有用新知识点）
	var str = "13542154724";
	var re = /(\d{3})*$/;	
	var startIndex = str.search(re);
	//startIndex: 2
	var str2 = str.match(re)[0];
	//或者str2=str.substring(startIndex);
	//str2: "542154724"
	re = /\d{3}/g;
	var str3 = str2.replace(re, function(match) {
	    return match + ',';
	});
	//str3: "542,154,724,"
	var str4;
	if (startIndex) {
	    str4 = str.substring(0, startIndex) + ',' + str3.substring(0, str3.length - 1);
	    //str4: "13,542,154,724"
	} else {
	    str4 = str3.substring(0, str3.length - 1);
	}
  用正则（讲的，用到新知识点：?=  ?!）
  	var str = "135452154724";
  	var re = /(?=(\d{3})+$)/g;
  	str.replace(re, ",");
  	但是：
  	"1354552154724" -> "1,354,552,154,724"
  	135452154724" -> ",135,452,154,724" （正好3位时，前面有逗号）
  	改：加上(?!\b)
	var re = /(?=((?!\b)\d{3})+$)/g;
	以后再看：http: //blog.csdn.net/sunhuaer123/article/details/16343313

2 不用正则
	var str = "13542154724";
	var startIndex = str.length % 3;
	//startIndex: 2
	var str2 = str.substring(startIndex);
	//str2: "542154724"
	var str3 = "";
	for (var i = 0; i < str2.length; i++) {
	    str3 += str2[i];
	    if (i % 3 == 2) {
	        str3 += ",";
	    }
	}
	//str3: "542,154,724,"
	if (startIndex) {
		    str4 = str.substring(0, startIndex) + ',' + str3.substring(0, str3.length - 1);
		    //str4: "13,542,154,724"
		} else {
		    str4 = str3.substring(0, str3.length - 1);
		}


--------------
解答4：返回一个只包含数字类型的数组
	js123ldka78sdasdasdfad653 -> [123,78,653]

	var str = "js123ldka78sdasdasdfad653";
	var re = /[\d]+/g;
	var arr=str.match(re);	//[ '123', '78', '653' ]